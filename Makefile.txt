# Variables
ANSIBLE_LINT_CONFIG = .ansible-lint
ANSIBLE_LINT_IGNORE = .ansible-lint-ignore

# Default target
all: linting-errors

# Auto-fix linting errors
auto-fix-linting:
	@echo "Running ansible-lint with --fix to auto-fix linting errors..."
	@ansible-lint --fix

# Get linting errors
linting-errors:
	@echo "Running ansible-lint to get linting errors..."
	@ansible-lint

# Create .ansible-lint file with default configuration
create-ansible-lint-config:
	@echo "Creating .ansible-lint file with default configuration..."
	@echo "skip_list: []" > $(ANSIBLE_LINT_CONFIG)
	@echo "fail_on_warning: False" >> $(ANSIBLE_LINT_CONFIG)

# Configure .ansible-lint-ignore file with empty ignore list
create-ansible-lint-ignore:
	@echo "Creating .ansible-lint-ignore file with an empty ignore list..."
	@touch $(ANSIBLE_LINT_IGNORE)

# Run super-linter for ansible in CI (GitHub Actions example)
ci-super-linter:
	@echo "Setting up Super Linter for CI..."
	@echo "Ensure that you have the GitHub Action in your CI pipeline (e.g., .github/workflows/ci.yml):"
	@echo ""
	@echo "jobs:"
	@echo "  lint:"
	@echo "    runs-on: ubuntu-latest"
	@echo "    steps:"
	@echo "      - name: Checkout repository"
	@echo "        uses: actions/checkout@v2"
	@echo "      - name: Set up Super Linter"
	@echo "        uses: github/super-linter@v4"
	@echo "        env:"
	@echo "          RUN_LOCAL: true"
	@echo ""
	@echo "After adding this to your CI config, Super Linter will automatically run on your project."

